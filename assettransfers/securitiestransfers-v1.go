// This file is autogenerated by cmd/generate/main.go
package assettransfers

import (
	"github.com/cborum/go-saxo"
)

// https://www.developer.saxo/openapi/referencedocs/atr/v1/securitiestransfers/transfer/cf6e251363afbbbe5660acfb9c847bc6
func Transfer(params *TransferParams) (*TransferResponse, error) {
    url := "https://gateway.saxobank.com/sim/openapi/atr/v1/securitiestransfers/transfers"
    resp, err := saxo.GetClient().DoRequest("POST", url, nil) 
    if err != nil {
        return nil, err
    }
    respJson := &TransferResponse{}
    err = resp.ToJSON(respJson)
    if err != nil {
        return nil, err
    }
    return respJson, nil
}

type TransferParams struct { 
    AccountKey string // required
    AssetType string // required
    Broker string // required
    ClientAccountAtBroker string // required
    ClientKey string // required
    Securities string // required
    SettlementDate string
    SettlementInstruction string
    TradeDate string
    TransferDirection string // required 
}

// https://www.developer.saxo/openapi/referencedocs/atr/v1/securitiestransfers/getbrokers/22b7d795c89eb4fa20b06f525a6d58a4
func GetBrokers(params *GetBrokersParams) (*GetBrokersResponse, error) {
    url := "https://gateway.saxobank.com/sim/openapi/atr/v1/securitiestransfers/brokers/?CountryCode={CountryCode}"
    url = saxo.PrepareUrlParams(url, params)
    resp, err := saxo.GetClient().DoRequest("GET", url, nil) 
    if err != nil {
        return nil, err
    }
    respJson := &GetBrokersResponse{}
    err = resp.ToJSON(respJson)
    if err != nil {
        return nil, err
    }
    return respJson, nil
}

type GetBrokersParams struct { 
    CountryCode string // required 
}

// https://www.developer.saxo/openapi/referencedocs/atr/v1/securitiestransfers/gettransferdetails/5961f7c694770ea83d4190909e1c4c89
func GetTransferDetails(params *GetTransferDetailsParams) (*GetTransferDetailsResponse, error) {
    url := "https://gateway.saxobank.com/sim/openapi/atr/v1/securitiestransfers/transfers/?TransferIds={TransferIds}&ClientKey={ClientKey}"
    url = saxo.PrepareUrlParams(url, params)
    resp, err := saxo.GetClient().DoRequest("GET", url, nil) 
    if err != nil {
        return nil, err
    }
    respJson := &GetTransferDetailsResponse{}
    err = resp.ToJSON(respJson)
    if err != nil {
        return nil, err
    }
    return respJson, nil
}

type GetTransferDetailsParams struct { 
    ClientKey string
    TransferIds string // required 
}
